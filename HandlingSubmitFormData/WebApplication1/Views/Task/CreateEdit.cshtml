
<!-- This exposes the properties of the model (Task)-->
@model WebApplication1.Models.Task

<div class="row">
    <div class="col-lg-12">
        <h1 class="page-header">
            Create a New Task<br />
            <small>These are issues your team members should take care of - ASAP!</span></small>
        </h1>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <!-- Creates form tags for you-->
        @using (Html.BeginForm("CreateEdit", "Task"))
        {
            <div class="form-group">
                <!-- Creates the label of the textbox -->
                @Html.LabelFor(x => x.Title, "Title")
                <!-- Creates the textbox with class=form-control -->
                @Html.TextBoxFor(x => x.Title, new { @class = "form-control" })
            </div>
            <div class="form-group">
                <label>Description</label>
                @Html.TextAreaFor(x => x.Title, new { @class = "form-control", rows = 5 })
            </div>

            <!-- Build the drop down list manually -->
            var list = new List<SelectListItem>()
        {
            new SelectListItem() { Text = "Business Inquiry", Value = "4"},
            new SelectListItem() { Text = "Payment", Value = "1"},
            new SelectListItem() { Text = "UI Issue", Value = "2"},
            new SelectListItem() { Text = "Question", Value = "3"}
        };

            <!-- Assign newly build list to the form -->
            <div class="form-group">
                @Html.LabelFor(x => x.Category, "Category")
                @Html.DropDownListFor(x => x.CategoryId, list, new { @class = "form-control" })
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.DueDate, "Due Date")
                @Html.TextBoxFor(x => x.DueDate, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.DueDate)
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.AssignedToId, "Assigned To")
                @Html.TextBoxFor(x => x.AssignedToId, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.AssignedToId)
            </div>
            @*<div class="form-group">
                @Html.LabelFor(x => x.AssociatedMessageDisplay, "Associated Message")
                @Html.TextBoxFor(x => x.AssociatedMessageDisplay, new { @class = "form-control msg-suggestion" })
                @Html.ValidationMessageFor(x => x.AssociatedMessageId)
            </div>*@
            <div class="form-group">
                @Html.HiddenFor(x => x.AssociatedMessageId, new { @class = "form-control msg-id" })
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.Notes, "Notes")
                @Html.TextAreaFor(x => x.Notes, new { @class = "form-control", rows = 5 })
                @Html.ValidationMessageFor(x => x.Notes)
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.Completed, "Is Complete")
                @Html.CheckBoxFor(x => x.Completed)
                @Html.ValidationMessageFor(x => x.Completed)
            </div>
            <div class="form-group">
                <input class="btn btn-primary pull-right" type="submit" text="Submit">
            </div>
        }



        @*<form action="/Task/CreateEditTask" method="post">
            <div class="form-group">
                <label for="Title">Title</label>
                <input class="form-control" id="Title" name="Title" type="text" value="" />
            </div>
            <div class="form-group">
                <label>Description</label>
                <textarea class="form-control" cols="20" id="Description" name="Description" rows="5"></textarea>
            </div>
            <div class="form-group">
                <label for="CategoryId">Category</label>
                <select class="form-control" data-val="true" data-val-number="The field CategoryId must be a number." data-val-required="The CategoryId field is required." id="CategoryId" name="CategoryId">
                    <option value="4">Business Enquiry</option>
                    <option value="1">Payment</option>
                    <option value="2">UI Issue</option>
                    <option value="3">Question</option>
                </select>
            </div>
            <div class="form-group">
                <label>Due Date</label>
                <input class="form-control" data-val="true" data-val-date="The field DueDate must be a date." data-val-required="The DueDate field is required." id="DueDate" name="DueDate" type="text" value="" />
            </div>
            <div class="form-group">
                <label>Assigned To</label>
                <input class="form-control" data-val="true" data-val-number="The field AssignedToId must be a number." data-val-required="The AssignedToId field is required." id="AssignedToId" name="AssignedToId" type="text" value="" />
            </div>
            <div class="form-group">
                <label>Associated Message</label>
                <input class="form-control" data-val="true" data-val-number="The field AssociatedMessageId must be a number." data-val-required="The AssociatedMessageId field is required." id="AssociatedMessageId" name="AssociatedMessageId" type="text" value="" />
            </div>
            <div class="form-group">
                <label>Notes</label>
                <textarea class="form-control" cols="20" id="Notes" name="Notes" rows="5"></textarea>
            </div>
            <div class="form-group">
                <label>Is Complete</label>
                <input data-val="true" data-val-required="The Completed field is required." id="Completed" name="Completed" type="checkbox" value="true" /><input name="Completed" type="hidden" value="false" />
            </div>
            <div class="form-group">
                <input class="btn btn-primary pull-right" type="submit" text="Submit">
            </div>
        </form>*@
    </div>
</div>